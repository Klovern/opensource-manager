//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.AspNetUser), "AspNetUserClaims", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.AspNetUserClaim), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.AspNetUser), "AspNetUserLogins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.AspNetUserLogin), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ProjectUsers_User", "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.AspNetUser), "ProjectUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.ProjectUser), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Card_List", "List", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.List), "Card", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.Card), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Card_User", "ProjectUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.ProjectUser), "Card", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.Card), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CardActiveUser_Card", "Card", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.Card), "CardActiveUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.CardActiveUser), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Comment_Card", "Card", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.Card), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.Comment), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_CardActiveUser_User", "ProjectUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.ProjectUser), "CardActiveUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.CardActiveUser), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Comment_User", "ProjectUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.ProjectUser), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.Comment), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_EventLog_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.Project), "EventLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.EventLog), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_List_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.Project), "List", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.List), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_List_User", "ProjectUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.ProjectUser), "List", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.List), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ProjectUsers_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(opensource_manager.DB.Project), "ProjectUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.ProjectUser), true)]
[assembly: EdmRelationshipAttribute("Model", "AspNetUserRoles", "AspNetRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.AspNetRole), "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(opensource_manager.DB.AspNetUser))]

#endregion

namespace opensource_manager.DB
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<C__MigrationHistory> C__MigrationHistory
        {
            get
            {
                if ((_C__MigrationHistory == null))
                {
                    _C__MigrationHistory = base.CreateObjectSet<C__MigrationHistory>("C__MigrationHistory");
                }
                return _C__MigrationHistory;
            }
        }
        private ObjectSet<C__MigrationHistory> _C__MigrationHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetRole> AspNetRoles
        {
            get
            {
                if ((_AspNetRoles == null))
                {
                    _AspNetRoles = base.CreateObjectSet<AspNetRole>("AspNetRoles");
                }
                return _AspNetRoles;
            }
        }
        private ObjectSet<AspNetRole> _AspNetRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUserClaim> AspNetUserClaims
        {
            get
            {
                if ((_AspNetUserClaims == null))
                {
                    _AspNetUserClaims = base.CreateObjectSet<AspNetUserClaim>("AspNetUserClaims");
                }
                return _AspNetUserClaims;
            }
        }
        private ObjectSet<AspNetUserClaim> _AspNetUserClaims;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUserLogin> AspNetUserLogins
        {
            get
            {
                if ((_AspNetUserLogins == null))
                {
                    _AspNetUserLogins = base.CreateObjectSet<AspNetUserLogin>("AspNetUserLogins");
                }
                return _AspNetUserLogins;
            }
        }
        private ObjectSet<AspNetUserLogin> _AspNetUserLogins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUser> AspNetUsers
        {
            get
            {
                if ((_AspNetUsers == null))
                {
                    _AspNetUsers = base.CreateObjectSet<AspNetUser>("AspNetUsers");
                }
                return _AspNetUsers;
            }
        }
        private ObjectSet<AspNetUser> _AspNetUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Card> Cards
        {
            get
            {
                if ((_Cards == null))
                {
                    _Cards = base.CreateObjectSet<Card>("Cards");
                }
                return _Cards;
            }
        }
        private ObjectSet<Card> _Cards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CardActiveUser> CardActiveUsers
        {
            get
            {
                if ((_CardActiveUsers == null))
                {
                    _CardActiveUsers = base.CreateObjectSet<CardActiveUser>("CardActiveUsers");
                }
                return _CardActiveUsers;
            }
        }
        private ObjectSet<CardActiveUser> _CardActiveUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventLog> EventLogs
        {
            get
            {
                if ((_EventLogs == null))
                {
                    _EventLogs = base.CreateObjectSet<EventLog>("EventLogs");
                }
                return _EventLogs;
            }
        }
        private ObjectSet<EventLog> _EventLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<List> Lists
        {
            get
            {
                if ((_Lists == null))
                {
                    _Lists = base.CreateObjectSet<List>("Lists");
                }
                return _Lists;
            }
        }
        private ObjectSet<List> _Lists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectUser> ProjectUsers
        {
            get
            {
                if ((_ProjectUsers == null))
                {
                    _ProjectUsers = base.CreateObjectSet<ProjectUser>("ProjectUsers");
                }
                return _ProjectUsers;
            }
        }
        private ObjectSet<ProjectUser> _ProjectUsers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the C__MigrationHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToC__MigrationHistory(C__MigrationHistory c__MigrationHistory)
        {
            base.AddObject("C__MigrationHistory", c__MigrationHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetRoles(AspNetRole aspNetRole)
        {
            base.AddObject("AspNetRoles", aspNetRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUserClaims EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetUserClaims(AspNetUserClaim aspNetUserClaim)
        {
            base.AddObject("AspNetUserClaims", aspNetUserClaim);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUserLogins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetUserLogins(AspNetUserLogin aspNetUserLogin)
        {
            base.AddObject("AspNetUserLogins", aspNetUserLogin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetUsers(AspNetUser aspNetUser)
        {
            base.AddObject("AspNetUsers", aspNetUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCards(Card card)
        {
            base.AddObject("Cards", card);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CardActiveUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCardActiveUsers(CardActiveUser cardActiveUser)
        {
            base.AddObject("CardActiveUsers", cardActiveUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventLogs(EventLog eventLog)
        {
            base.AddObject("EventLogs", eventLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLists(List list)
        {
            base.AddObject("Lists", list);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectUsers(ProjectUser projectUser)
        {
            base.AddObject("ProjectUsers", projectUser);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="AspNetRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AspNetRole CreateAspNetRole(global::System.String id, global::System.String name)
        {
            AspNetRole aspNetRole = new AspNetRole();
            aspNetRole.Id = id;
            aspNetRole.Name = name;
            return aspNetRole;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "AspNetUserRoles", "AspNetUsers")]
        public EntityCollection<AspNetUser> AspNetUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUser>("Model.AspNetUserRoles", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUser>("Model.AspNetUserRoles", "AspNetUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="AspNetUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="emailConfirmed">Initial value of the EmailConfirmed property.</param>
        /// <param name="phoneNumberConfirmed">Initial value of the PhoneNumberConfirmed property.</param>
        /// <param name="twoFactorEnabled">Initial value of the TwoFactorEnabled property.</param>
        /// <param name="lockoutEnabled">Initial value of the LockoutEnabled property.</param>
        /// <param name="accessFailedCount">Initial value of the AccessFailedCount property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static AspNetUser CreateAspNetUser(global::System.String id, global::System.Boolean emailConfirmed, global::System.Boolean phoneNumberConfirmed, global::System.Boolean twoFactorEnabled, global::System.Boolean lockoutEnabled, global::System.Int32 accessFailedCount, global::System.String userName)
        {
            AspNetUser aspNetUser = new AspNetUser();
            aspNetUser.Id = id;
            aspNetUser.EmailConfirmed = emailConfirmed;
            aspNetUser.PhoneNumberConfirmed = phoneNumberConfirmed;
            aspNetUser.TwoFactorEnabled = twoFactorEnabled;
            aspNetUser.LockoutEnabled = lockoutEnabled;
            aspNetUser.AccessFailedCount = accessFailedCount;
            aspNetUser.UserName = userName;
            return aspNetUser;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EmailConfirmed
        {
            get
            {
                return _EmailConfirmed;
            }
            set
            {
                OnEmailConfirmedChanging(value);
                ReportPropertyChanging("EmailConfirmed");
                _EmailConfirmed = StructuralObject.SetValidValue(value, "EmailConfirmed");
                ReportPropertyChanged("EmailConfirmed");
                OnEmailConfirmedChanged();
            }
        }
        private global::System.Boolean _EmailConfirmed;
        partial void OnEmailConfirmedChanging(global::System.Boolean value);
        partial void OnEmailConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, true, "PasswordHash");
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityStamp
        {
            get
            {
                return _SecurityStamp;
            }
            set
            {
                OnSecurityStampChanging(value);
                ReportPropertyChanging("SecurityStamp");
                _SecurityStamp = StructuralObject.SetValidValue(value, true, "SecurityStamp");
                ReportPropertyChanged("SecurityStamp");
                OnSecurityStampChanged();
            }
        }
        private global::System.String _SecurityStamp;
        partial void OnSecurityStampChanging(global::System.String value);
        partial void OnSecurityStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PhoneNumberConfirmed
        {
            get
            {
                return _PhoneNumberConfirmed;
            }
            set
            {
                OnPhoneNumberConfirmedChanging(value);
                ReportPropertyChanging("PhoneNumberConfirmed");
                _PhoneNumberConfirmed = StructuralObject.SetValidValue(value, "PhoneNumberConfirmed");
                ReportPropertyChanged("PhoneNumberConfirmed");
                OnPhoneNumberConfirmedChanged();
            }
        }
        private global::System.Boolean _PhoneNumberConfirmed;
        partial void OnPhoneNumberConfirmedChanging(global::System.Boolean value);
        partial void OnPhoneNumberConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TwoFactorEnabled
        {
            get
            {
                return _TwoFactorEnabled;
            }
            set
            {
                OnTwoFactorEnabledChanging(value);
                ReportPropertyChanging("TwoFactorEnabled");
                _TwoFactorEnabled = StructuralObject.SetValidValue(value, "TwoFactorEnabled");
                ReportPropertyChanged("TwoFactorEnabled");
                OnTwoFactorEnabledChanged();
            }
        }
        private global::System.Boolean _TwoFactorEnabled;
        partial void OnTwoFactorEnabledChanging(global::System.Boolean value);
        partial void OnTwoFactorEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LockoutEndDateUtc
        {
            get
            {
                return _LockoutEndDateUtc;
            }
            set
            {
                OnLockoutEndDateUtcChanging(value);
                ReportPropertyChanging("LockoutEndDateUtc");
                _LockoutEndDateUtc = StructuralObject.SetValidValue(value, "LockoutEndDateUtc");
                ReportPropertyChanged("LockoutEndDateUtc");
                OnLockoutEndDateUtcChanged();
            }
        }
        private Nullable<global::System.DateTime> _LockoutEndDateUtc;
        partial void OnLockoutEndDateUtcChanging(Nullable<global::System.DateTime> value);
        partial void OnLockoutEndDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LockoutEnabled
        {
            get
            {
                return _LockoutEnabled;
            }
            set
            {
                OnLockoutEnabledChanging(value);
                ReportPropertyChanging("LockoutEnabled");
                _LockoutEnabled = StructuralObject.SetValidValue(value, "LockoutEnabled");
                ReportPropertyChanged("LockoutEnabled");
                OnLockoutEnabledChanged();
            }
        }
        private global::System.Boolean _LockoutEnabled;
        partial void OnLockoutEnabledChanging(global::System.Boolean value);
        partial void OnLockoutEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessFailedCount
        {
            get
            {
                return _AccessFailedCount;
            }
            set
            {
                OnAccessFailedCountChanging(value);
                ReportPropertyChanging("AccessFailedCount");
                _AccessFailedCount = StructuralObject.SetValidValue(value, "AccessFailedCount");
                ReportPropertyChanged("AccessFailedCount");
                OnAccessFailedCountChanged();
            }
        }
        private global::System.Int32 _AccessFailedCount;
        partial void OnAccessFailedCountChanging(global::System.Int32 value);
        partial void OnAccessFailedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUserClaims")]
        public EntityCollection<AspNetUserClaim> AspNetUserClaims
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUserClaim>("Model.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUserClaims");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUserClaim>("Model.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUserClaims", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUserLogins")]
        public EntityCollection<AspNetUserLogin> AspNetUserLogins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUserLogin>("Model.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUserLogins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUserLogin>("Model.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUserLogins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProjectUsers_User", "ProjectUsers")]
        public EntityCollection<ProjectUser> ProjectUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUser>("Model.FK_ProjectUsers_User", "ProjectUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUser>("Model.FK_ProjectUsers_User", "ProjectUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "AspNetUserRoles", "AspNetRoles")]
        public EntityCollection<AspNetRole> AspNetRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetRole>("Model.AspNetUserRoles", "AspNetRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetRole>("Model.AspNetUserRoles", "AspNetRoles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="AspNetUserClaim")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUserClaim : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetUserClaim object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static AspNetUserClaim CreateAspNetUserClaim(global::System.Int32 id, global::System.String userId)
        {
            AspNetUserClaim aspNetUserClaim = new AspNetUserClaim();
            aspNetUserClaim.Id = id;
            aspNetUserClaim.UserId = userId;
            return aspNetUserClaim;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimType
        {
            get
            {
                return _ClaimType;
            }
            set
            {
                OnClaimTypeChanging(value);
                ReportPropertyChanging("ClaimType");
                _ClaimType = StructuralObject.SetValidValue(value, true, "ClaimType");
                ReportPropertyChanged("ClaimType");
                OnClaimTypeChanged();
            }
        }
        private global::System.String _ClaimType;
        partial void OnClaimTypeChanging(global::System.String value);
        partial void OnClaimTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimValue
        {
            get
            {
                return _ClaimValue;
            }
            set
            {
                OnClaimValueChanging(value);
                ReportPropertyChanging("ClaimValue");
                _ClaimValue = StructuralObject.SetValidValue(value, true, "ClaimValue");
                ReportPropertyChanged("ClaimValue");
                OnClaimValueChanged();
            }
        }
        private global::System.String _ClaimValue;
        partial void OnClaimValueChanging(global::System.String value);
        partial void OnClaimValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Model.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Model.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Model.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("Model.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="AspNetUserLogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUserLogin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetUserLogin object.
        /// </summary>
        /// <param name="loginProvider">Initial value of the LoginProvider property.</param>
        /// <param name="providerKey">Initial value of the ProviderKey property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static AspNetUserLogin CreateAspNetUserLogin(global::System.String loginProvider, global::System.String providerKey, global::System.String userId)
        {
            AspNetUserLogin aspNetUserLogin = new AspNetUserLogin();
            aspNetUserLogin.LoginProvider = loginProvider;
            aspNetUserLogin.ProviderKey = providerKey;
            aspNetUserLogin.UserId = userId;
            return aspNetUserLogin;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginProvider
        {
            get
            {
                return _LoginProvider;
            }
            set
            {
                if (_LoginProvider != value)
                {
                    OnLoginProviderChanging(value);
                    ReportPropertyChanging("LoginProvider");
                    _LoginProvider = StructuralObject.SetValidValue(value, false, "LoginProvider");
                    ReportPropertyChanged("LoginProvider");
                    OnLoginProviderChanged();
                }
            }
        }
        private global::System.String _LoginProvider;
        partial void OnLoginProviderChanging(global::System.String value);
        partial void OnLoginProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProviderKey
        {
            get
            {
                return _ProviderKey;
            }
            set
            {
                if (_ProviderKey != value)
                {
                    OnProviderKeyChanging(value);
                    ReportPropertyChanging("ProviderKey");
                    _ProviderKey = StructuralObject.SetValidValue(value, false, "ProviderKey");
                    ReportPropertyChanged("ProviderKey");
                    OnProviderKeyChanged();
                }
            }
        }
        private global::System.String _ProviderKey;
        partial void OnProviderKeyChanging(global::System.String value);
        partial void OnProviderKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Model.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Model.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Model.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("Model.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="C__MigrationHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C__MigrationHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new C__MigrationHistory object.
        /// </summary>
        /// <param name="migrationId">Initial value of the MigrationId property.</param>
        /// <param name="contextKey">Initial value of the ContextKey property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="productVersion">Initial value of the ProductVersion property.</param>
        public static C__MigrationHistory CreateC__MigrationHistory(global::System.String migrationId, global::System.String contextKey, global::System.Byte[] model, global::System.String productVersion)
        {
            C__MigrationHistory c__MigrationHistory = new C__MigrationHistory();
            c__MigrationHistory.MigrationId = migrationId;
            c__MigrationHistory.ContextKey = contextKey;
            c__MigrationHistory.Model = model;
            c__MigrationHistory.ProductVersion = productVersion;
            return c__MigrationHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MigrationId
        {
            get
            {
                return _MigrationId;
            }
            set
            {
                if (_MigrationId != value)
                {
                    OnMigrationIdChanging(value);
                    ReportPropertyChanging("MigrationId");
                    _MigrationId = StructuralObject.SetValidValue(value, false, "MigrationId");
                    ReportPropertyChanged("MigrationId");
                    OnMigrationIdChanged();
                }
            }
        }
        private global::System.String _MigrationId;
        partial void OnMigrationIdChanging(global::System.String value);
        partial void OnMigrationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContextKey
        {
            get
            {
                return _ContextKey;
            }
            set
            {
                if (_ContextKey != value)
                {
                    OnContextKeyChanging(value);
                    ReportPropertyChanging("ContextKey");
                    _ContextKey = StructuralObject.SetValidValue(value, false, "ContextKey");
                    ReportPropertyChanged("ContextKey");
                    OnContextKeyChanged();
                }
            }
        }
        private global::System.String _ContextKey;
        partial void OnContextKeyChanging(global::System.String value);
        partial void OnContextKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Model
        {
            get
            {
                return StructuralObject.GetValidValue(_Model);
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false, "Model");
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.Byte[] _Model;
        partial void OnModelChanging(global::System.Byte[] value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductVersion
        {
            get
            {
                return _ProductVersion;
            }
            set
            {
                OnProductVersionChanging(value);
                ReportPropertyChanging("ProductVersion");
                _ProductVersion = StructuralObject.SetValidValue(value, false, "ProductVersion");
                ReportPropertyChanged("ProductVersion");
                OnProductVersionChanged();
            }
        }
        private global::System.String _ProductVersion;
        partial void OnProductVersionChanging(global::System.String value);
        partial void OnProductVersionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Card")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Card : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Card object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="listID">Initial value of the ListID property.</param>
        public static Card CreateCard(global::System.Int32 id, global::System.String text, global::System.DateTime created, global::System.Int32 creatorID, global::System.Int32 listID)
        {
            Card card = new Card();
            card.Id = id;
            card.Text = text;
            card.Created = created;
            card.CreatorID = creatorID;
            card.ListID = listID;
            return card;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value, "CreatorID");
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListID
        {
            get
            {
                return _ListID;
            }
            set
            {
                OnListIDChanging(value);
                ReportPropertyChanging("ListID");
                _ListID = StructuralObject.SetValidValue(value, "ListID");
                ReportPropertyChanged("ListID");
                OnListIDChanged();
            }
        }
        private global::System.Int32 _ListID;
        partial void OnListIDChanging(global::System.Int32 value);
        partial void OnListIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Card_List", "List")]
        public List List
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("Model.FK_Card_List", "List").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("Model.FK_Card_List", "List").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<List> ListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("Model.FK_Card_List", "List");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<List>("Model.FK_Card_List", "List", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Card_User", "ProjectUsers")]
        public ProjectUser ProjectUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("Model.FK_Card_User", "ProjectUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("Model.FK_Card_User", "ProjectUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUser> ProjectUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("Model.FK_Card_User", "ProjectUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUser>("Model.FK_Card_User", "ProjectUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CardActiveUser_Card", "CardActiveUser")]
        public EntityCollection<CardActiveUser> CardActiveUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CardActiveUser>("Model.FK_CardActiveUser_Card", "CardActiveUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CardActiveUser>("Model.FK_CardActiveUser_Card", "CardActiveUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Comment_Card", "Comment")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("Model.FK_Comment_Card", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("Model.FK_Comment_Card", "Comment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="CardActiveUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CardActiveUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CardActiveUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="cardID">Initial value of the CardID property.</param>
        /// <param name="datetime">Initial value of the Datetime property.</param>
        public static CardActiveUser CreateCardActiveUser(global::System.Int32 id, global::System.Int32 userID, global::System.Int32 cardID, global::System.DateTime datetime)
        {
            CardActiveUser cardActiveUser = new CardActiveUser();
            cardActiveUser.Id = id;
            cardActiveUser.UserID = userID;
            cardActiveUser.CardID = cardID;
            cardActiveUser.Datetime = datetime;
            return cardActiveUser;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardID
        {
            get
            {
                return _CardID;
            }
            set
            {
                OnCardIDChanging(value);
                ReportPropertyChanging("CardID");
                _CardID = StructuralObject.SetValidValue(value, "CardID");
                ReportPropertyChanged("CardID");
                OnCardIDChanged();
            }
        }
        private global::System.Int32 _CardID;
        partial void OnCardIDChanging(global::System.Int32 value);
        partial void OnCardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Datetime
        {
            get
            {
                return _Datetime;
            }
            set
            {
                OnDatetimeChanging(value);
                ReportPropertyChanging("Datetime");
                _Datetime = StructuralObject.SetValidValue(value, "Datetime");
                ReportPropertyChanged("Datetime");
                OnDatetimeChanged();
            }
        }
        private global::System.DateTime _Datetime;
        partial void OnDatetimeChanging(global::System.DateTime value);
        partial void OnDatetimeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CardActiveUser_Card", "Card")]
        public Card Card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("Model.FK_CardActiveUser_Card", "Card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("Model.FK_CardActiveUser_Card", "Card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Card> CardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("Model.FK_CardActiveUser_Card", "Card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Card>("Model.FK_CardActiveUser_Card", "Card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CardActiveUser_User", "ProjectUsers")]
        public ProjectUser ProjectUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("Model.FK_CardActiveUser_User", "ProjectUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("Model.FK_CardActiveUser_User", "ProjectUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUser> ProjectUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("Model.FK_CardActiveUser_User", "ProjectUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUser>("Model.FK_CardActiveUser_User", "ProjectUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="cardID">Initial value of the CardID property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        public static Comment CreateComment(global::System.Int32 id, global::System.String text, global::System.DateTime created, global::System.Int32 cardID, global::System.Int32 creatorID)
        {
            Comment comment = new Comment();
            comment.Id = id;
            comment.Text = text;
            comment.Created = created;
            comment.CardID = cardID;
            comment.CreatorID = creatorID;
            return comment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Attatchment
        {
            get
            {
                return StructuralObject.GetValidValue(_Attatchment);
            }
            set
            {
                OnAttatchmentChanging(value);
                ReportPropertyChanging("Attatchment");
                _Attatchment = StructuralObject.SetValidValue(value, true, "Attatchment");
                ReportPropertyChanged("Attatchment");
                OnAttatchmentChanged();
            }
        }
        private global::System.Byte[] _Attatchment;
        partial void OnAttatchmentChanging(global::System.Byte[] value);
        partial void OnAttatchmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardID
        {
            get
            {
                return _CardID;
            }
            set
            {
                OnCardIDChanging(value);
                ReportPropertyChanging("CardID");
                _CardID = StructuralObject.SetValidValue(value, "CardID");
                ReportPropertyChanged("CardID");
                OnCardIDChanged();
            }
        }
        private global::System.Int32 _CardID;
        partial void OnCardIDChanging(global::System.Int32 value);
        partial void OnCardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value, "CreatorID");
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Comment_Card", "Card")]
        public Card Card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("Model.FK_Comment_Card", "Card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("Model.FK_Comment_Card", "Card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Card> CardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("Model.FK_Comment_Card", "Card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Card>("Model.FK_Comment_Card", "Card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Comment_User", "ProjectUsers")]
        public ProjectUser ProjectUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("Model.FK_Comment_User", "ProjectUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("Model.FK_Comment_User", "ProjectUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUser> ProjectUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("Model.FK_Comment_User", "ProjectUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUser>("Model.FK_Comment_User", "ProjectUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="EventLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="datetime">Initial value of the Datetime property.</param>
        /// <param name="action">Initial value of the Action property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        public static EventLog CreateEventLog(global::System.Int32 id, global::System.DateTime datetime, global::System.String action, global::System.Int32 projectID)
        {
            EventLog eventLog = new EventLog();
            eventLog.Id = id;
            eventLog.Datetime = datetime;
            eventLog.Action = action;
            eventLog.ProjectID = projectID;
            return eventLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Datetime
        {
            get
            {
                return _Datetime;
            }
            set
            {
                OnDatetimeChanging(value);
                ReportPropertyChanging("Datetime");
                _Datetime = StructuralObject.SetValidValue(value, "Datetime");
                ReportPropertyChanged("Datetime");
                OnDatetimeChanged();
            }
        }
        private global::System.DateTime _Datetime;
        partial void OnDatetimeChanging(global::System.DateTime value);
        partial void OnDatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, false, "Action");
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EventLog_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model.FK_EventLog_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model.FK_EventLog_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model.FK_EventLog_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("Model.FK_EventLog_Project", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="List")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class List : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new List object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        public static List CreateList(global::System.Int32 id, global::System.String title, global::System.DateTime created, global::System.Int32 creatorID, global::System.Int32 projectID)
        {
            List list = new List();
            list.Id = id;
            list.Title = title;
            list.Created = created;
            list.CreatorID = creatorID;
            list.ProjectID = projectID;
            return list;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value, "CreatorID");
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Card_List", "Card")]
        public EntityCollection<Card> Cards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Card>("Model.FK_Card_List", "Card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Card>("Model.FK_Card_List", "Card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_List_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model.FK_List_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model.FK_List_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model.FK_List_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("Model.FK_List_Project", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_List_User", "ProjectUsers")]
        public ProjectUser ProjectUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("Model.FK_List_User", "ProjectUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("Model.FK_List_User", "ProjectUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUser> ProjectUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("Model.FK_List_User", "ProjectUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUser>("Model.FK_List_User", "ProjectUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static Project CreateProject(global::System.Int32 id, global::System.String title)
        {
            Project project = new Project();
            project.Id = id;
            project.Title = title;
            return project;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_EventLog_Project", "EventLog")]
        public EntityCollection<EventLog> EventLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventLog>("Model.FK_EventLog_Project", "EventLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventLog>("Model.FK_EventLog_Project", "EventLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_List_Project", "List")]
        public EntityCollection<List> Lists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<List>("Model.FK_List_Project", "List");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<List>("Model.FK_List_Project", "List", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProjectUsers_Project", "ProjectUsers")]
        public EntityCollection<ProjectUser> ProjectUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUser>("Model.FK_ProjectUsers_Project", "ProjectUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUser>("Model.FK_ProjectUsers_Project", "ProjectUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ProjectUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="datetime">Initial value of the Datetime property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        public static ProjectUser CreateProjectUser(global::System.Int32 id, global::System.String userID, global::System.DateTime datetime, global::System.Int32 projectID)
        {
            ProjectUser projectUser = new ProjectUser();
            projectUser.Id = id;
            projectUser.UserID = userID;
            projectUser.Datetime = datetime;
            projectUser.ProjectID = projectID;
            return projectUser;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, true, "Role");
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Datetime
        {
            get
            {
                return _Datetime;
            }
            set
            {
                OnDatetimeChanging(value);
                ReportPropertyChanging("Datetime");
                _Datetime = StructuralObject.SetValidValue(value, "Datetime");
                ReportPropertyChanged("Datetime");
                OnDatetimeChanged();
            }
        }
        private global::System.DateTime _Datetime;
        partial void OnDatetimeChanging(global::System.DateTime value);
        partial void OnDatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProjectUsers_User", "AspNetUsers")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Model.FK_ProjectUsers_User", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Model.FK_ProjectUsers_User", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Model.FK_ProjectUsers_User", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("Model.FK_ProjectUsers_User", "AspNetUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Card_User", "Card")]
        public EntityCollection<Card> Cards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Card>("Model.FK_Card_User", "Card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Card>("Model.FK_Card_User", "Card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_CardActiveUser_User", "CardActiveUser")]
        public EntityCollection<CardActiveUser> CardActiveUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CardActiveUser>("Model.FK_CardActiveUser_User", "CardActiveUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CardActiveUser>("Model.FK_CardActiveUser_User", "CardActiveUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Comment_User", "Comment")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("Model.FK_Comment_User", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("Model.FK_Comment_User", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_List_User", "List")]
        public EntityCollection<List> Lists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<List>("Model.FK_List_User", "List");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<List>("Model.FK_List_User", "List", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProjectUsers_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model.FK_ProjectUsers_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model.FK_ProjectUsers_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model.FK_ProjectUsers_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("Model.FK_ProjectUsers_Project", "Project", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
